. conda-utils

make_empty_conda_env() {
    mamba create -n "${DEFAULT_CONDA_ENV:-legate}"
}

generate_conda_env_yaml_file_for_test() {
    local cuda_version="${CUDA_VERSION:-${CUDA_VERSION_MAJOR}.${CUDA_VERSION_MINOR}}";
    cuda_version="$(echo "${cuda_version}" | cut -d'.' -f3 --complement)";

    local python_version="${PYTHON_VERSION:-}";

    if [ -z "${python_version}" ]; then
        python_version="$(python3 --version 2>&1 | cut -d' ' -f2 | cut -d'.' -f3 --complement)";
    fi

    yaml_file=~/"$(         \
        ~/legate/scripts/generate-conda-envs.py \
            --os linux                          \
            --compilers                         \
            --ctk ${cuda_version}               \
            --python ${python_version}          \
            --openmpi                           \
            --no-ucx                            \
            --sections "$@"                     \
        | head -n1 | cut -d' ' -f3              \
    )"

    sed -i -re "s/legate-test/${DEFAULT_CONDA_ENV:-legate}/g" "${yaml_file}";

    echo "\"$@\" YAML file: ${yaml_file}"
    cat ${yaml_file}

    mkdir -p /tmp/out
    cp "${yaml_file}" /tmp/out
}

update_conda_env_using_section() {
    local yaml_file="";

    generate_conda_env_yaml_file_for_test "$@";

    mamba env update -n "${DEFAULT_CONDA_ENV:-legate}" -f "${yaml_file}";
}

install_cunumeric() {
    mamba install -y -n "${DEFAULT_CONDA_ENV:-legate}" -c nvidia -c conda-forge -c /tmp/conda-build/cunumeric -c /tmp/conda-build/legate_core cunumeric;
}