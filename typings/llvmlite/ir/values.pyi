from typing import Tuple

from llvmlite.ir._utils import (
    _HasMetadata,
    _StrCaching,
    _StringReferenceCaching,
)
from llvmlite.ir.module import Module
from llvmlite.ir.types import FunctionType

class Value: ...
class NamedValue(_StrCaching, _StringReferenceCaching, Value): ...
class Block(NamedValue): ...
class _BaseArgument(NamedValue): ...
class Argument(_BaseArgument): ...
class _ConstOpMixin: ...
class GlobalValue(NamedValue, _ConstOpMixin, _HasMetadata): ...

class Function(GlobalValue):
    args: Tuple[Argument]

    def __init__(self, module: Module, ftype: FunctionType, name: str): ...
    def append_basic_block(self, name: str) -> Block: ...
