#! /usr/bin/env -S bash -euo pipefail

make_legate_conda_env() {

    local env_name="${1}";

    if [[ ! -f ~/legate/scripts/generate-conda-envs.py ]]; then
        echo "ERR: Cannot create '${env_name}' conda env due to" 1>&2;
        echo "ERR: missing ~/legate/scripts/generate-conda-envs.py!" 1>&2;
        echo "ERR: Please run \`clone-legate-core.sh\` first." 1>&2;
        exit 1;
    fi

    # Remove the current conda env if called with `-f|--force`
    if echo "${@:2}" | grep -qE '(\-f|\-\-force)'; then
        rm -rf "$HOME/.conda/envs/${env_name}";
    fi

    local cuda_version="${CUDA_VERSION:-${CUDA_VERSION_MAJOR}.${CUDA_VERSION_MINOR}}";
    cuda_version="$(echo "${cuda_version}" | cut -d'.' -f3 --complement)";

    local python_version="${PYTHON_VERSION:-}";

    if [ -z "${python_version}" ]; then
        python_version="$(python3 --version 2>&1 | cut -d' ' -f2 | cut -d'.' -f3 --complement)";
    fi

    cd /tmp;

    local env_file_name="$(                     \
        ~/legate/scripts/generate-conda-envs.py \
            --no-ucx                            \
            --openmpi                           \
            --os linux                          \
            --compilers                         \
            --ctk ${cuda_version}               \
            --python ${python_version}          \
        | head -n1                              \
        | cut -d' ' -f3                         \
    )";

    cd - >/dev/null 2>&1;

    local new_env_path="$(realpath -m /tmp/${env_file_name})";
    local old_env_path="$(realpath -m ~/.cache/${env_file_name})";

    # Add sccache to the conda env
    # if ! grep -q "sccache" "${new_env_path}"; then
    #     echo "  - sccache # added by make-legate-conda-env.sh" >> "${new_env_path}";
    # fi

    # Add debugpy to the conda env
    if ! grep -q "debugpy" "${new_env_path}"; then
        echo "  - debugpy # added by make-legate-conda-env.sh" >> "${new_env_path}";
    fi

    sed -i -re "s/legate-test/${env_name}/g" "${new_env_path}";

    # If the conda env doesn't exist, make one
    if ! conda info -e | grep -qE "^${env_name} "; then
        echo -e "Creating '${env_name}' conda environment\n" 1>&2;
        echo -e "Environment (${env_file_name}):\n" 1>&2;
        cat "${new_env_path}";
        echo "";

        mamba env create -n "${env_name}" -f "${new_env_path}";
    # If the conda env does exist but it's different from the one
    # generated by the current legate branch, print the diff between
    # the envs and update it
    elif ! diff -BNqw "${old_env_path}" "${new_env_path}" >/dev/null 2>&1; then
        echo -e "Updating '${env_name}' conda environment\n" 1>&2;
        echo -e "Environment (${env_file_name}):\n" 1>&2;

        # Print the diff to the console for debugging
        [ ! -f "${old_env_path}" ]                         \
         && cat "${new_env_path}"                          \
         || diff -BNyw "${old_env_path}" "${new_env_path}" \
         || true                                           \
         && echo "";

        # Update the current conda env + prune libs that were removed
        mamba env update -n "${env_name}" -f "${new_env_path}" --prune || (
            echo "ERR: \`mamba env update\` command failed. Please fix the env yaml" 1>&2;
            echo "ERR: file generated by ~/legate/scripts/generate-conda-envs.py." 1>&2;
            echo "ERR: " 1>&2;
            echo "ERR: If you think this is a dependency conflict between packages" 1>&2;
            echo "ERR: in the current env, you can run \`make-legate-conda-env.sh --force\`" 1>&2;
            echo "ERR: to recreate the env from scratch." 1>&2;
            exit 1;
        );
    fi

    cp -a "${new_env_path}" "${old_env_path}";
}

# Use a consistent name and assume re-running `make-legate-conda-env.sh` after
# switching branches will be fast b/c we use mamba and most packages will be
# in the local conda package cache.
make_legate_conda_env "legate" "$@";

. /opt/conda/etc/profile.d/conda.sh;
conda activate legate 2>/dev/null;
